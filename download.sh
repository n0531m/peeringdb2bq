#!/bin/bash

DIR_DATA=./data

DIR_RAW=$DIR_DATA/raw
DIR_NEWLINE_DELIMITED=$DIR_DATA/newlinedelimited
DIR_META=$DIR_DATA/meta

for dir in $DIR_DATA $DIR_RAW $DIR_NEWLINE_DELIMITED $DIR_META
do
	if test ! -d $dir
		then mkdir $dir
	fi
done

for obj in fac ix ixfac ixlan ixpfx net netfac netixlan org poc
do
	if test -e $DIR_RAW/$obj
		then ZFLAG="-z $DIR_RAW/$obj"
	else ZFLAG=
	fi
	curl -o $DIR_RAW/$obj.json $ZFLAG https://www.peeringdb.com/api/$obj
	cat $DIR_RAW/$obj.json | jq -c -S  ".data[]" > $DIR_NEWLINE_DELIMITED/$obj.json
	cat $DIR_RAW/$obj.json | jq ".meta" > $DIR_META/$obj.json 
done

GCP_PROJECTID=moritani-bigdata
gcloud config set project $GCP_PROJECTID
GCS_BUCKET=gs://moritani-bigdata
GCS_DATA_ROOT=$GCS_BUCKET/peeringdb2bq
GCS_DATA_DIR=$GCS_DATA_ROOT/newlinedelimited

gsutil -m cp $DIR_NEWLINE_DELIMITED/* $GCS_DATA_DIR/
gsutil ls $GCS_DATA_DIR

BQ_DATASET=peeringdb
bq mk $BQ_DATASET

for obj in fac ix ixfac ixlan ixpfx net netfac netixlan org poc
do
	bq load --autodetect --source_format NEWLINE_DELIMITED_JSON $BQ_DATASET.$obj $GCS_DATA_DIR/$obj.json
	description="generated by $0. data extracted from peeringdb : $(cat $DIR_META/$obj.json | jq .generated)"
	bq update --description "$description" $BQ_DATASET.$obj 
done







